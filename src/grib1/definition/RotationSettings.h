// ***********************************************************************
//                      DO NOT EDIT THIS FILE !!!
// ***********************************************************************
//   This file is automatically generated from the grib_api templates. All
//   changes will be overridden. If you want to do permanent changes then
//   you should write them into the 'RotationSettingsImpl.*' files.
// ***********************************************************************

#pragma once
#include "../../common/AttributeList.h"
#include "../../common/DataWriter.h"
#include "../../common/MemoryReader.h"
#include "../../grid/Typedefs.h"

namespace SmartMet {
namespace GRIB1 {
/*! \brief The class is automatically created from the template (grid_rotation).*/

class RotationSettings {
public:
  RotationSettings();
  virtual ~RotationSettings();

  virtual void getAttributeList(const std::string &prefix, T::AttributeList &attributeList) const;
  virtual void read(MemoryReader &memoryReader);
  virtual void write(DataWriter &dataWriter);
  virtual void print(std::ostream &stream, uint level, uint optionFlags) const;
  virtual bool getAttributeValue(const char *attributeName, std::string &attributeValue) const;
  virtual bool hasAttributeValue(const char *attributeName, const char *attributeValue) const;
  virtual T::Hash countHash();

  std::int24_t getLatitudeOfSouthernPole() const;
  void setLatitudeOfSouthernPole(std::int24_t latitudeOfSouthernPole);
  std::int24_t getLongitudeOfSouthernPole() const;
  void setLongitudeOfSouthernPole(std::int24_t longitudeOfSouthernPole);
  ibmfloat getGeography_angleOfRotationInDegrees() const;
  void setGeography_angleOfRotationInDegrees(ibmfloat geography_angleOfRotationInDegrees);

protected:
  // # Copyright 2005-2019 ECMWF.
  //
  // signed[3] latitudeOfSouthernPole : edition_specific;

  std::int24_t mLatitudeOfSouthernPole;

  // meta  geography.latitudeOfSouthernPoleInDegrees   scale(latitudeOfSouthernPole ,oneConstant,grib1divider,truncateDegrees) : dump;
  //
  // signed[3] longitudeOfSouthernPole : edition_specific ;

  std::int24_t mLongitudeOfSouthernPole;

  // meta  geography.longitudeOfSouthernPoleInDegrees   scale(longitudeOfSouthernPole ,oneConstant,grib1divider,truncateDegrees) : dump;
  //
  // ibmfloat geography.angleOfRotationInDegrees : dump;

  ibmfloat mGeography_angleOfRotationInDegrees;

  //
  // alias angleOfRotation =angleOfRotationInDegrees;
  // alias is_rotated_grid = one;
};

} // namespace GRIB1
} // namespace SmartMet
