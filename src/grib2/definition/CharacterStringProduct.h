// ***********************************************************************
//                      DO NOT EDIT THIS FILE !!!
// ***********************************************************************
//   This file is automatically generated from the grib_api templates. All
//   changes will be overridden. If you want to do permanent changes then
//   you should write them into the 'CharacterStringProductImpl.*' files.
// ***********************************************************************

#pragma once
#include "common/AttributeList.h"
#include "common/MemoryReader.h"
#include "grib2/ProductDefinition.h"
#include "grid/Typedefs.h"

namespace SmartMet {
namespace GRIB2 {
/*! \brief The class is automatically created from the template (4.254).*/

class CharacterStringProduct : public ProductDefinition {
public:
  CharacterStringProduct();
  virtual ~CharacterStringProduct();

  virtual void read(MemoryReader &memoryReader);
  virtual void getAttributeList(std::string prefix, T::AttributeList &attributeList) const;
  virtual void print(std::ostream &stream, uint level, uint optionFlags) const;
  virtual T::Hash countHash();

  const T::UInt8_opt &getParameterCategory() const;
  void setParameterCategory(T::UInt8_opt parameterCategory);
  const T::UInt8_opt &getParameterNumber() const;
  void setParameterNumber(T::UInt8_opt parameterNumber);
  const T::UInt32_opt &getNumberOfCharacters() const;
  void setNumberOfCharacters(T::UInt32_opt numberOfCharacters);

protected:
  // # Copyright 2005-2015 ECMWF.
  // #
  // # This software is licensed under the terms of the Apache Licence Version 2.0
  // # which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
  // #
  // # In applying this licence, ECMWF does not waive the privileges and immunities granted to it by
  // # virtue of its status as an intergovernmental organisation nor does it submit to any jurisdiction.
  // #
  //
  // # TEMPLATE 4.254, CCITT IA5 character string
  //
  // #  Parameter category
  // codetable[1] parameterCategory ('4.1.[discipline:l].table',masterDir,localDir): dump;

  T::UInt8_opt mParameterCategory;

  //
  // #  Parameter number
  // codetable[1] parameterNumber ('4.2.[discipline:l].[parameterCategory:l].table',masterDir,localDir)  : dump;

  T::UInt8_opt mParameterNumber;

  // meta parameterUnits codetable_units(parameterNumber) : dump;
  // meta parameterName  codetable_title(parameterNumber) : dump;
  //
  // #  Number of characters
  // unsigned[4] numberOfCharacters  : dump;

  T::UInt32_opt mNumberOfCharacters;
};

} // namespace GRIB2
} // namespace SmartMet
