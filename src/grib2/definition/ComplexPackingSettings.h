// ***********************************************************************
//                      DO NOT EDIT THIS FILE !!!
// ***********************************************************************
//   This file is automatically generated from the grib_api templates. All
//   changes will be overridden. If you want to do permanent changes then
//   you should write them into the 'ComplexPackingSettingsImpl.*' files.
// ***********************************************************************

#pragma once
#include "../../common/AttributeList.h"
#include "../../common/DataWriter.h"
#include "../../common/MemoryReader.h"
#include "../../grid/Typedefs.h"

namespace SmartMet {
namespace GRIB2 {
/*! \brief The class is automatically created from the template (7.second_order).*/

class ComplexPackingSettings {
public:
  ComplexPackingSettings();
  virtual ~ComplexPackingSettings();

  virtual void read(MemoryReader &memoryReader);
  virtual void write(DataWriter &dataWriter);
  virtual void getAttributeList(const std::string &prefix, T::AttributeList &attributeList) const;
  virtual bool getAttributeValue(const char *attributeName, std::string &attributeValue) const;
  virtual bool hasAttributeValue(const char *attributeName, const char *attributeValue) const;
  virtual void print(std::ostream &stream, uint level, uint optionFlags) const;
  virtual T::Hash countHash() const;

protected:
  // # Copyright 2005-2019 ECMWF.
  //
  // # TEMPLATE 7.2, Grid point data - complex packing
  //
  // position offsetBeforeData;
  //
  // constant orderOfSpatialDifferencing     = 0;
  // constant numberOfOctetsExtraDescriptors = 0;
  //
  // meta codedValues data_g2second_order_packing(
  //      section7Length,
  //      offsetBeforeData,
  //      offsetSection7,
  // 	 unitsFactor,
  //      unitsBias,
  //      changingPrecision,
  //      numberOfCodedValues,
  //      bitsPerValue,
  //      referenceValue,
  //      binaryScaleFactor,
  //      decimalScaleFactor,
  //     #g2second_order_packing
  //      halfByte,
  //      packingType,
  //      grid_ieee,
  //      precision,
  //      widthOfFirstOrderValues,
  //      firstOrderValues,
  //      N1,
  //      N2,
  //      numberOfGroups,
  //      codedNumberOfGroups,
  //      numberOfSecondOrderPackedValues,
  //      extraValues,
  //      groupWidths,
  //      widthOfWidths,
  //      groupLengths,
  //      widthOfLengths,
  //      NL,
  //      SPD,
  //      widthOfSPD,
  //      orderOfSPD,
  //      numberOfPoints
  //
  // ): read_only;
  //
  // meta values data_apply_bitmap(codedValues,
  //                               bitmap,
  //                               missingValue,
  //                               binaryScaleFactor,
  //                               numberOfDataPoints,
  //                               numberOfValues) : dump;
  //
  // alias data.packedValues = codedValues;
  //
  // template statistics "common/statistics_grid.def";
};

} // namespace GRIB2
} // namespace SmartMet
