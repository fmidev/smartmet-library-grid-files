// ***********************************************************************
//                      DO NOT EDIT THIS FILE !!!
// ***********************************************************************
//   This file is automatically generated from the grib_api templates. All
//   changes will be overridden. If you want to do permanent changes then
//   you should write them into the 'DerivedSettingsImpl.*' files.
// ***********************************************************************

#pragma once
#include "../../common/AttributeList.h"
#include "../../common/DataWriter.h"
#include "../../common/MemoryReader.h"
#include "../../grid/Typedefs.h"

namespace SmartMet {
namespace GRIB2 {
/*! \brief The class is automatically created from the template (4.derived).*/

class DerivedSettings {
public:
  DerivedSettings();
  DerivedSettings(const DerivedSettings &other);
  virtual ~DerivedSettings();

  virtual void read(MemoryReader &memoryReader);
  virtual void write(DataWriter &dataWriter);
  virtual void getAttributeList(std::string prefix, T::AttributeList &attributeList) const;
  virtual void print(std::ostream &stream, uint level, uint optionFlags) const;
  virtual T::Hash countHash();

  const T::UInt8_opt &getDerivedForecast() const;
  void setDerivedForecast(T::UInt8_opt derivedForecast);
  const T::UInt8_opt &getNumberOfForecastsInEnsemble() const;
  void setNumberOfForecastsInEnsemble(T::UInt8_opt numberOfForecastsInEnsemble);

protected:
  // # Copyright 2005-2017 ECMWF.
  // #
  // # This software is licensed under the terms of the Apache Licence Version 2.0
  // # which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
  // #
  // # In applying this licence, ECMWF does not waive the privileges and immunities granted to it by
  // # virtue of its status as an intergovernmental organisation nor does it submit to any jurisdiction.
  // #
  //
  // #  Derived forecast
  // codetable[1] derivedForecast ('4.7.table',masterDir,localDir) : dump;

  T::UInt8_opt mDerivedForecast;

  //
  // #  Number of forecasts in ensemble
  // unsigned[1] numberOfForecastsInEnsemble  : dump;

  T::UInt8_opt mNumberOfForecastsInEnsemble;

  // alias totalNumber=numberOfForecastsInEnsemble;
};

} // namespace GRIB2
} // namespace SmartMet
