// ***********************************************************************
//                      DO NOT EDIT THIS FILE !!!
// ***********************************************************************
//   This file is automatically generated from the grib_api templates. All
//   changes will be overridden. If you want to do permanent changes then
//   you should write them into the 'ForecastErrorImpl.*' files.
// ***********************************************************************

#pragma once
#include "../../common/AttributeList.h"
#include "../../common/DataWriter.h"
#include "../../common/MemoryReader.h"
#include "../../grid/Typedefs.h"
#include "../ProductDefinition.h"
#include "NormalProduct.h"

namespace SmartMet {
namespace GRIB2 {
/*! \brief The class is automatically created from the template (4.7).*/

class ForecastError : public ProductDefinition {
public:
  ForecastError();
  ~ForecastError() override;

  uint getTemplateNumber() const override;
  ProductDefinition *createProductDefinition() const override;
  void read(MemoryReader &memoryReader) override;
  void write(DataWriter &dataWriter) override;
  void getAttributeList(const std::string &prefix, T::AttributeList &attributeList) const override;
  void print(std::ostream &stream, uint level, uint optionFlags) const override;
  virtual T::Hash countHash();

  NormalProduct *getNormalProduct() const;
  void setNormalProduct(NormalProduct &normalProduct);

protected:
  // # Note: This template is deprecated. Template 4.0 should be used instead.
  // include "grib2/template.4.0.def"

  mutable NormalProduct mNormalProduct;
};

} // namespace GRIB2
} // namespace SmartMet
