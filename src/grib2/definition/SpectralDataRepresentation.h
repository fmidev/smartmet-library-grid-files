// ***********************************************************************
//                      DO NOT EDIT THIS FILE !!!
// ***********************************************************************
//   This file is automatically generated from the grib_api templates. All
//   changes will be overridden. If you want to do permanent changes then
//   you should write them into the 'SpectralDataRepresentationImpl.*' files.
// ***********************************************************************

#pragma once
#include "../../common/AttributeList.h"
#include "../../common/DataWriter.h"
#include "../../common/MemoryReader.h"
#include "../../grid/Typedefs.h"
#include "../RepresentationDefinition.h"
#include "PackingSettings.h"

namespace SmartMet {
namespace GRIB2 {
/*! \brief The class is automatically created from the template (5.50).*/

class SpectralDataRepresentation : public RepresentationDefinition {
public:
  SpectralDataRepresentation();
  ~SpectralDataRepresentation() override;

  uint getTemplateNumber() const override;
  RepresentationDefinition *createRepresentationDefinition() const override;
  void read(MemoryReader &memoryReader) override;
  void write(DataWriter &dataWriter) override;
  void getAttributeList(const std::string &prefix, T::AttributeList &attributeList) const override;
  void print(std::ostream &stream, uint level, uint optionFlags) const override;
  virtual T::Hash countHash();

  PackingSettings *getPacking() const override;
  void setPacking(PackingSettings &packing);
  float getRealPartOf00() const;
  void setRealPartOf00(float realPartOf00);

protected:
  // # Copyright 2005-2019 ECMWF.
  //
  // # TEMPLATE 5.50, Spectral data - simple packing
  // include "grib2/template.5.packing.def";

  mutable PackingSettings mPacking;

  //
  // #  Real part of (0,0)
  // ieeefloat realPartOf00 ;

  float mRealPartOf00;
};

} // namespace GRIB2
} // namespace SmartMet
